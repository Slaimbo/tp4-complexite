//reduction de clique vers indépendant
main
{
  //La taille des independants est égale a la taille de la clique
  out.k = in.k;
  //On parcours la matrice d'adjacence
  for (i = 1; i <= in.numnodes; i++)
  {
    //On ajoute les sommets de la clique dans la liste des sommets des independants
    out.nodes.push = i;
    for (j = i; j <= in.numnodes; j++)
    {
      //si il n'existe pas d'arette dans la clique, on la met dans le graph des independants
      if(i != j and in.adjacencymatrix[i][j] == 0)
      {
	out.edges.push = i, j;
      }
    }
  }
}

//reduction de couverture vers indépendant
main
{
  out.k = in.numnodes - in.k;
  for (i = 0; i < in.edges.size; i++)
  {
    out.edges.push = in.edges[i][0], in.edges[i][1];
  }
  for (i = 1; i <= in.numnodes; i++)
  {
    out.nodes.push = i;
  }
}

//VERTEX COVER ≤\leq≤ DOMINATING SET
main
{
  var = in.numnodes + 1;
  for(i = 0; i < in.edges.size; i++)
  {
    	out.edges.push = in.edges[i][0], in.edges[i][1];
 	out.edges.push = in.edges[i][0], var;
    	out.edges.push = var, in.edges[i][1];
    	var++;
  }
  
  for(i = 1; i <= in.numnodes; i++)
  {
    if( in.adjacents[i].size != 0) 
    	out.nodes.push = i;	
  }
  
  out.k = in.k;
}
